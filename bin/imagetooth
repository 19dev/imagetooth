#!/usr/bin/ruby
##########################################################################
#  Copyright (C) 2007 Ramos, Gast√≥n - ramos.gaston@gmail.com
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#########################################################################


lib_path = File.expand_path(File.dirname(__FILE__))
lib_path = File.join lib_path, "../lib"

$LOAD_PATH << lib_path

require 'optparse'
require 'image_tooth'
require 'ostruct'
require 'pp'

class Optparse
  def self.parse(args)
    options = OpenStruct.new

    opts = OptionParser.new do |opts|
      opts.on("-a", "--all", "Generate all teeth images's combinations.") do |all|
        options.all = all
      end

      opts.on("-i", "--image IMAGE", "Generate image tooth based on file name.") do |i|
        options.image = i
      end

      opts.on("-f", "--folder FOLDER", "Folder where images are saved.") do |f|
        options.folder = f
      end

      opts.on_tail("-h", "--help", "Show this message") do
        puts opts
        exit
      end
    end

    opts.parse!(args)
    options
  end
end

opt = Optparse.parse(ARGV)

if (opt.all and opt.folder)
  @img_tooth = ImageTooth.new
  @img_tooth.root_path = opt.folder
  @img_tooth.create_folders
  @img_tooth.gen_all
elsif (opt.image and opt.folder)
  @img_tooth = ImageTooth.new
  @img_tooth.root_path = opt.folder
  @img_tooth.paint_img opt.image
else
  Optparse.parse(["-h"])
end

